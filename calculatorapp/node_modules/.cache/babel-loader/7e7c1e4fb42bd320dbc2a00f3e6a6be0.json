{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Masai School\\\\Unit-5\\\\react_first_component\\\\masaiapp\\\\src\\\\Notes\\\\Hook-State-Props.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./hookStateProps.css\"; //flags\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet plus = false;\nlet minus = false;\nlet multiple = false;\nlet division = false;\n\nfunction Hook_State_Props() {\n  _s();\n\n  let num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \"=\", \"+\", \"-\", \"*\", \"%\", \"C\"]; //holding data \n\n  let [currValue, setCurrValue] = useState(0); //hooks for change state in input field\n\n  let [currNumber, setCurrNumber] = useState(\"0\");\n\n  const typeNum = currDigit => {\n    if (currDigit === 1 || currDigit === 2 || currDigit === 3 || currDigit === 4 || currDigit === 5 || currDigit === 6 || currDigit === 7 || currDigit === 8 || currDigit === 9 || currDigit === 0) {\n      if (currNumber === \"0\") {\n        currNumber = \"\" + currDigit;\n      } else if (typeof currNumber === \"string\") {\n        currNumber += currDigit;\n      } else if (typeof currNumber === \"number\") {\n        currNumber = \"\" + currDigit;\n      }\n\n      setCurrNumber(currNumber);\n    } else if (currDigit === \"C\") {\n      // console.log(currDigit);\n      if (currNumber !== \"0\" && currNumber.length !== 0) {\n        currNumber = currNumber.slice(0, -1);\n      } else if (currNumber.length === 0) {\n        // console.log(currNumber.length);\n        currNumber = 0;\n      }\n\n      setCurrNumber(currNumber);\n    } else if (currDigit === \"+\") {\n      plus = true;\n\n      if (currValue === 0) {\n        currValue = +currNumber;\n      } else {\n        currValue = currValue + +currNumber;\n      } //change state of input field\n\n\n      setCurrNumber(\"\"); //change state of total value \n\n      setCurrValue(currValue); // console.log(plus);\n      // console.log(currValue);\n    } else if (currDigit === \"-\") {\n      minus = true;\n\n      if (currValue === 0) {\n        currValue = +currNumber;\n      } else {\n        currValue = currValue - +currNumber;\n      } //change state of input field\n\n\n      setCurrNumber(\"\"); //change state of total value \n\n      setCurrValue(currValue);\n      console.log(currValue);\n    } else if (currDigit === \"*\") {\n      multiple = true;\n\n      if (currValue === 0) {\n        currValue = +currNumber;\n      } else {\n        currValue = currValue * +currNumber;\n      } //change state of input field\n\n\n      setCurrNumber(\"\"); //change state of total value \n\n      setCurrValue(currValue);\n      console.log(currValue);\n    } else if (currDigit === \"%\") {\n      division = true;\n\n      if (currValue === 0) {\n        currValue = +currNumber;\n      } else {\n        currValue = (currValue / +currNumber).toFixed(3);\n      } //change state of input field\n\n\n      setCurrNumber(\"\"); //change state of total value \n\n      setCurrValue(currValue);\n      console.log(currValue);\n    } else if (currDigit === \"=\") {\n      // console.log(plus);\n      if (plus === true) {\n        // console.log(\"plus\");\n        currValue = currValue + +currNumber;\n        plus = false;\n      } else if (minus === true) {\n        currValue = currValue - +currNumber;\n        minus = false;\n      } else if (multiple === true) {\n        currValue = currValue * +currNumber;\n        multiple = false;\n      } else if (division === true) {\n        currValue = (currValue / +currNumber).toFixed(3);\n        division = false;\n      } // console.log(\"currValue  \" +currValue)\n      //change state of total value \n\n\n      setCurrValue(currValue); //change state of input field\n\n      setCurrNumber(currValue); //change state of total value \n\n      setCurrValue(0);\n    } //|| currDigit === \"-\" || currDigit === \"*\"  || currDigit === \"%\"\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"heading\",\n      children: \"React Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"React 16.8.0 is the first release to support Hooks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Hooks allow you to reuse stateful logic without changing your component hierarchy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Don\\u2019t call Hooks inside loops, conditions, or nested functions. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \" Instead, always use Hooks at the top level of your React function, before any early returns. By following this rule, you ensure that Hooks are called in the same order each time a component renders.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"All type of hooks in React\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useState\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useEffect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useContext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useLayoutEffect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useReducer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useCallback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useMemo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useRef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"useState\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Syntax:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 22\n        }, this), \" const [currentState,updateState] = useState(value of currentState)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 28\n        }, this), \"Here, \\\"currentState\\\" is a variable that holds current state of the variable.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), \"\\\"updateState\\\" is a function that helps to change the state.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this), \"And \\\"useState\\\" is a function and take one argument that is the current value of current State\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Creating Calculator Using React Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"\",\n          id: \"field\",\n          value: currNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operationBtn\",\n          children: num.map(currNum => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"numBtn\",\n              onClick: () => typeNum(currNum),\n              children: currNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hook_State_Props, \"Pz/LgeSGFyAKGMQdsRJIi666H2I=\");\n\n_c = Hook_State_Props;\nexport default Hook_State_Props;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hook_State_Props\");","map":{"version":3,"sources":["D:/Documents/Masai School/Unit-5/react_first_component/masaiapp/src/Notes/Hook-State-Props.jsx"],"names":["React","useState","plus","minus","multiple","division","Hook_State_Props","num","currValue","setCurrValue","currNumber","setCurrNumber","typeNum","currDigit","length","slice","console","log","toFixed","map","currNum"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./hookStateProps.css\"\r\n\r\n\r\n //flags\r\n let plus = false;\r\n let minus = false;\r\n let multiple = false;\r\n let division = false;\r\n\r\nfunction Hook_State_Props() {\r\n    let num = [1,2,3,4,5,6,7,8,9,0,\"=\",\"+\",\"-\",\"*\",\"%\",\"C\"];\r\n\r\n    //holding data \r\n    let [currValue,setCurrValue] = useState(0);\r\n\r\n   \r\n\r\n    //hooks for change state in input field\r\n    let [currNumber , setCurrNumber] = useState(\"0\")\r\n\r\n    const typeNum = (currDigit)=>{\r\n        if(currDigit === 1 || currDigit === 2 || currDigit === 3 || currDigit === 4 || currDigit === 5 || currDigit === 6 || currDigit === 7 || currDigit === 8 || currDigit === 9 || currDigit === 0){\r\n            if(currNumber === \"0\"){\r\n                currNumber = \"\" + currDigit;\r\n            }else if(typeof(currNumber) === \"string\"){\r\n                currNumber += currDigit;\r\n            }else if(typeof(currNumber) === \"number\"){\r\n                currNumber = \"\" + currDigit;\r\n            }\r\n            setCurrNumber(currNumber)\r\n        }else if(currDigit === \"C\"){\r\n            // console.log(currDigit);\r\n            if(currNumber !== \"0\" && currNumber.length !== 0){\r\n                currNumber = currNumber.slice(0,-1);\r\n                \r\n            }else if(currNumber.length === 0){\r\n                // console.log(currNumber.length);\r\n                currNumber = 0;\r\n            }\r\n            setCurrNumber(currNumber)\r\n        }else if(currDigit === \"+\"){\r\n            plus = true;\r\n            if(currValue === 0){\r\n                currValue = +currNumber;  \r\n            }else{\r\n                currValue = currValue + +currNumber;\r\n            }\r\n\r\n            //change state of input field\r\n            setCurrNumber(\"\");\r\n\r\n            //change state of total value \r\n            setCurrValue(currValue)\r\n            // console.log(plus);\r\n            // console.log(currValue);\r\n        }else if(currDigit === \"-\"){\r\n            minus = true;\r\n            if(currValue === 0){\r\n                currValue = +currNumber;  \r\n            }else{\r\n                currValue = currValue - +currNumber;\r\n            }\r\n\r\n            //change state of input field\r\n            setCurrNumber(\"\");\r\n\r\n            //change state of total value \r\n            setCurrValue(currValue)\r\n\r\n            console.log(currValue);\r\n        }else if(currDigit === \"*\"){\r\n            multiple = true;\r\n            if(currValue === 0){\r\n                currValue = +currNumber;  \r\n            }else{\r\n                currValue = currValue * +currNumber;\r\n            }\r\n\r\n            //change state of input field\r\n            setCurrNumber(\"\");\r\n\r\n            //change state of total value \r\n            setCurrValue(currValue)\r\n\r\n            console.log(currValue);\r\n        }else if(currDigit === \"%\"){\r\n            division = true;\r\n            if(currValue === 0){\r\n                currValue = +currNumber;  \r\n            }else{\r\n                currValue = (currValue / +currNumber).toFixed(3);\r\n            }\r\n\r\n            //change state of input field\r\n            setCurrNumber(\"\");\r\n\r\n            //change state of total value \r\n            setCurrValue(currValue)\r\n\r\n            console.log(currValue);\r\n        }else if(currDigit === \"=\"){\r\n            // console.log(plus);\r\n            if(plus === true){\r\n                // console.log(\"plus\");\r\n                currValue = currValue + +currNumber;\r\n                plus = false;\r\n            }else if(minus === true){\r\n                currValue = currValue - +currNumber;\r\n                minus = false;\r\n            }else if(multiple === true){\r\n                currValue = currValue * +currNumber;\r\n                multiple = false;\r\n            }else if(division === true){\r\n                currValue = (currValue / +currNumber).toFixed(3);\r\n                division = false;\r\n            }\r\n            // console.log(\"currValue  \" +currValue)\r\n            //change state of total value \r\n            setCurrValue(currValue)\r\n\r\n            //change state of input field\r\n            setCurrNumber(currValue);\r\n\r\n            //change state of total value \r\n            setCurrValue(0)\r\n\r\n        }\r\n\r\n        //|| currDigit === \"-\" || currDigit === \"*\"  || currDigit === \"%\"\r\n    }\r\n    return (\r\n        <div id='container'>\r\n            <h1 class=\"heading\">React Hook</h1>\r\n            <ul>\r\n                <li>React 16.8.0 is the first release to support Hooks.</li>\r\n                <li>Hooks allow you to reuse stateful logic without changing your component hierarchy.</li>\r\n                <li>Don’t call Hooks inside loops, conditions, or nested functions. </li>\r\n                <li> Instead, always use Hooks at the top level of your React function, before any early returns. By following this rule, you ensure that Hooks are called in the same order each time a component renders.</li>\r\n                <li>\r\n                    All type of hooks in React\r\n                    <ul>\r\n                        <li>useState</li>\r\n                        <li>useEffect</li>\r\n                        <li>useContext</li>\r\n                        <li>useLayoutEffect</li>\r\n                        <li>useReducer</li>\r\n                        <li>useCallback</li>\r\n                        <li>useMemo</li>\r\n                        <li>useRef</li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n\r\n            <h1 className='heading'>useState</h1>\r\n            <ul>\r\n                <li> <strong>Syntax:</strong> const [currentState,updateState] = useState(value of currentState)\r\n                      <br/><br/>\r\n                      Here, \"currentState\" is a variable that holds current state of the variable.\r\n                            <br/>\r\n                            \"updateState\" is a function that helps to change the state.\r\n                            <br/>\r\n                            And \"useState\" is a function and take one argument that is the current value of current State\r\n                </li>\r\n            </ul>\r\n\r\n            <h1 className='heading'>Creating Calculator Using React Hooks</h1>\r\n            <div className=\"calculator\">\r\n                <div className=\"project\">\r\n                    <input type=\"number\" name=\"\" id=\"field\" value={currNumber}/>\r\n\r\n                    <div className=\"operationBtn\">\r\n                        {\r\n                            num.map((currNum)=>{\r\n                                return <button className='numBtn' onClick={()=>typeNum(currNum)}>{currNum}</button>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hook_State_Props\r\n"]},"metadata":{},"sourceType":"module"}