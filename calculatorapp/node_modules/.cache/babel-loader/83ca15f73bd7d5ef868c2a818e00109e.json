{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Masai School\\\\Unit-5\\\\react_first_component\\\\masaiapp\\\\src\\\\Notes\\\\Hook-State-Props.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./hookStateProps.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hook_State_Props() {\n  _s();\n\n  let num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \"=\", \"+\", \"-\", \"*\", \"%\", \"C\"]; //holding data \n\n  let [currValue, setCurrValue] = useState(0); //flags\n\n  let plus = false;\n  let minus = false;\n  let multiply = false;\n  let divide = false; //hooks for change state in input field\n\n  let [currNumber, setCurrNumber] = useState(\"0\");\n\n  const typeNum = currDigit => {\n    if (currDigit === 1 || currDigit === 2 || currDigit === 3 || currDigit === 4 || currDigit === 5 || currDigit === 6 || currDigit === 7 || currDigit === 8 || currDigit === 9 || currDigit === 0) {\n      if (currNumber === \"0\") {\n        currNumber = \"\" + currDigit;\n      } else if (typeof currNumber === \"string\") {\n        currNumber += currDigit;\n      } else if (typeof currNumber === \"number\") {\n        currNumber = \"\" + currDigit;\n      }\n\n      setCurrNumber(currNumber);\n    } else if (currDigit === \"C\") {\n      console.log(currDigit);\n\n      if (currNumber !== \"0\" && currNumber.length !== 0) {\n        currNumber = currNumber.slice(0, -1);\n      } else if (currNumber.length === 0) {\n        console.log(currNumber.length);\n        currNumber = 0;\n      }\n\n      setCurrNumber(currNumber);\n    }\n\n    if (currDigit === \"+\") {\n      plus = true;\n      currValue = currValue + +currNumber;\n      setCurrValue(currValue); // console.log(currValue);\n\n      currNumber = \"\";\n      setCurrNumber(currNumber);\n    }\n\n    if (currDigit === \"-\") {\n      minus = true;\n      currValue = currValue - +currNumber;\n      setCurrValue(currValue);\n      currNumber = \"\";\n      setCurrNumber(currNumber);\n    }\n\n    if (currDigit === \"=\") {\n      // console.log(\"=\");\n      if (plus === true) {\n        currValue = currValue + +currNumber;\n        plus = false;\n      } // console.log(currValue);\n\n\n      setCurrNumber(currValue);\n      currValue = 0;\n      setCurrValue(0);\n      console.log(\"currValue  \" + currValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"heading\",\n      children: \"React Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"React 16.8.0 is the first release to support Hooks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Hooks allow you to reuse stateful logic without changing your component hierarchy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Don\\u2019t call Hooks inside loops, conditions, or nested functions. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \" Instead, always use Hooks at the top level of your React function, before any early returns. By following this rule, you ensure that Hooks are called in the same order each time a component renders.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"All type of hooks in React\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useState\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useEffect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useContext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useLayoutEffect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useReducer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useCallback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useMemo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"useRef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"useState\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Syntax:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }, this), \" const [currentState,updateState] = useState(value of currentState)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 28\n        }, this), \"Here, \\\"currentState\\\" is a variable that holds current state of the variable.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), \"\\\"updateState\\\" is a function that helps to change the state.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), \"And \\\"useState\\\" is a function and take one argument that is the current value of current State\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Creating Calculator Using React Hooks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"\",\n          id: \"field\",\n          value: currNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operationBtn\",\n          children: num.map(currNum => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"numBtn\",\n              onClick: () => typeNum(currNum),\n              children: currNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hook_State_Props, \"Pz/LgeSGFyAKGMQdsRJIi666H2I=\");\n\n_c = Hook_State_Props;\nexport default Hook_State_Props;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hook_State_Props\");","map":{"version":3,"sources":["D:/Documents/Masai School/Unit-5/react_first_component/masaiapp/src/Notes/Hook-State-Props.jsx"],"names":["React","useState","Hook_State_Props","num","currValue","setCurrValue","plus","minus","multiply","divide","currNumber","setCurrNumber","typeNum","currDigit","console","log","length","slice","map","currNum"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./hookStateProps.css\"\r\n\r\nfunction Hook_State_Props() {\r\n    let num = [1,2,3,4,5,6,7,8,9,0,\"=\",\"+\",\"-\",\"*\",\"%\",\"C\"];\r\n\r\n    //holding data \r\n    let [currValue,setCurrValue] = useState(0);\r\n\r\n    //flags\r\n    let plus = false;\r\n    let minus = false;\r\n    let multiply = false;\r\n    let divide = false;\r\n\r\n    //hooks for change state in input field\r\n    let [currNumber , setCurrNumber] = useState(\"0\")\r\n\r\n    const typeNum = (currDigit)=>{\r\n        if(currDigit === 1 || currDigit === 2 || currDigit === 3 || currDigit === 4 || currDigit === 5 || currDigit === 6 || currDigit === 7 || currDigit === 8 || currDigit === 9 || currDigit === 0){\r\n            if(currNumber === \"0\"){\r\n                currNumber = \"\" + currDigit;\r\n            }else if(typeof(currNumber) === \"string\"){\r\n                currNumber += currDigit;\r\n            }else if(typeof(currNumber) === \"number\"){\r\n                currNumber = \"\" + currDigit;\r\n            }\r\n            setCurrNumber(currNumber)\r\n        }else if(currDigit === \"C\"){\r\n            console.log(currDigit);\r\n            if(currNumber !== \"0\" && currNumber.length !== 0){\r\n                currNumber = currNumber.slice(0,-1);\r\n                \r\n            }else if(currNumber.length === 0){\r\n                console.log(currNumber.length);\r\n                currNumber = 0;\r\n            }\r\n            setCurrNumber(currNumber)\r\n        }\r\n        \r\n        if(currDigit === \"+\"){\r\n            plus = true;\r\n            currValue = currValue + +currNumber;\r\n            setCurrValue(currValue)\r\n            // console.log(currValue);\r\n            currNumber = \"\";\r\n            setCurrNumber(currNumber)\r\n        }\r\n\r\n\r\n        if(currDigit === \"-\"){\r\n            minus = true;\r\n            currValue = currValue - +currNumber;\r\n            setCurrValue(currValue)\r\n            currNumber = \"\";\r\n            setCurrNumber(currNumber)\r\n        }\r\n\r\n        if(currDigit === \"=\"){\r\n            // console.log(\"=\");\r\n            if(plus === true){\r\n                currValue = currValue + +currNumber;\r\n                plus = false;\r\n            }\r\n\r\n            \r\n            \r\n            // console.log(currValue);\r\n            setCurrNumber(currValue);\r\n            currValue = 0;\r\n            setCurrValue(0);\r\n            console.log(\"currValue  \" + currValue);\r\n        }\r\n\r\n\r\n        \r\n    }\r\n    return (\r\n        <div id='container'>\r\n            <h1 class=\"heading\">React Hook</h1>\r\n            <ul>\r\n                <li>React 16.8.0 is the first release to support Hooks.</li>\r\n                <li>Hooks allow you to reuse stateful logic without changing your component hierarchy.</li>\r\n                <li>Don’t call Hooks inside loops, conditions, or nested functions. </li>\r\n                <li> Instead, always use Hooks at the top level of your React function, before any early returns. By following this rule, you ensure that Hooks are called in the same order each time a component renders.</li>\r\n                <li>\r\n                    All type of hooks in React\r\n                    <ul>\r\n                        <li>useState</li>\r\n                        <li>useEffect</li>\r\n                        <li>useContext</li>\r\n                        <li>useLayoutEffect</li>\r\n                        <li>useReducer</li>\r\n                        <li>useCallback</li>\r\n                        <li>useMemo</li>\r\n                        <li>useRef</li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n\r\n            <h1 className='heading'>useState</h1>\r\n            <ul>\r\n                <li> <strong>Syntax:</strong> const [currentState,updateState] = useState(value of currentState)\r\n                      <br/><br/>\r\n                      Here, \"currentState\" is a variable that holds current state of the variable.\r\n                            <br/>\r\n                            \"updateState\" is a function that helps to change the state.\r\n                            <br/>\r\n                            And \"useState\" is a function and take one argument that is the current value of current State\r\n                </li>\r\n            </ul>\r\n\r\n            <h1 className='heading'>Creating Calculator Using React Hooks</h1>\r\n            <div className=\"calculator\">\r\n                <div className=\"project\">\r\n                    <input type=\"number\" name=\"\" id=\"field\" value={currNumber}/>\r\n\r\n                    <div className=\"operationBtn\">\r\n                        {\r\n                            num.map((currNum)=>{\r\n                                return <button className='numBtn' onClick={()=>typeNum(currNum)}>{currNum}</button>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hook_State_Props\r\n"]},"metadata":{},"sourceType":"module"}